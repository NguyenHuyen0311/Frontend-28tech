28tech‚ÄîJavascript c∆° b·∫£n (Ti·∫øt 1)
üõéÔ∏èKh√°i ni·ªám v√† gi·ªõi thi·ªáu
* Kh√°i ni·ªám 
- Javascript (vi·∫øt t·∫Øt l√† JS) l√† m·ªôt ng√¥n ng·ªØ l·∫≠p tr√¨nh k·ªãch b·∫£n d·ª±a v√†o c√°c ƒë·ªëi t∆∞·ª£ng c√≥ s·∫µn ho·∫∑c do l·∫≠p tr√¨nh vi√™n t·ª± ƒë·ªãnh nghƒ©a
* Gi·ªõi thi·ªáu
- Tr∆∞·ªõc ƒë√¢y, Javascript ƒë∆∞·ª£c s·ª≠ d·ª•ng ch·ªß y·∫øu ƒë·ªÉ n√¢ng cao s·ª± t∆∞∆°ng t√°c c·ªßa ng∆∞·ªùi d√πng v·ªõi trang web. V√≠ d·ª• l√†m c√°c hi·ªáu ·ª©ng ƒë·∫∑c bi·ªát nh∆∞ sliders, popup, ho·∫∑c x√°c th·ª±c d·ªØ li·ªáu c√°c form (form validations) tr∆∞·ªõc khi g·ª≠i d·ªØ li·ªáu l√™n server (m√°y ch·ªß)
- Ng√†y nay, Javascript kh√¥ng ch·ªâ gi·ªõi h·∫°n trong khu√¥n kh·ªï x√¢y d·ª±ng ·ª©ng d·ª•ng web, m√† c√≤n s·ª≠ d·ª•ng r·ªông r√£i trong ph√°t tri·ªÉn ·ª©ng d·ª•ng, game tr√™n ƒëi·ªán tho·∫°i hay c√°c ·ª©ng d·ª•ng d√†nh cho server 
+Web app: Reacjs, Vuejs, Angularjs‚Ä¶
+Mobile app: React Native‚Ä¶
+Server app: Nodejs, Expressjs
+Graphic: two.js (2D), three.js (3D)‚Ä¶
+AI: brain.js‚Ä¶
+Nhi·ªÅu lƒ©nh v·ª±c kh√°c n·ªØa m√† Javascript c√≥ th·ªÉ l√†m ƒë∆∞·ª£c
* Vi·∫øt ch∆∞∆°ng tr√¨nh ‚ÄúHello World‚Äù
<button onclick="alert('Hello World!')">
    Click Me 
</button>
* C√°c c√°ch s·ª≠ d·ª•ng javascript
C1: Inline - vi·∫øt tr·ª±c ti·∫øp trong th·∫ª HTML
C2: Internal - vi·∫øt trong file HTML hi·ªán t·∫°i
C3: External - vi·∫øt ra m·ªôt file js kh√°c  r·ªìi nh√∫ng v√†o trang HTML
üõéÔ∏èVariables (Bi·∫øn) 
* Kh√°i ni·ªám: l√† n∆°i ƒë·ªÉ b·∫°n c√≥ th·ªÉ l∆∞u tr·ªØ th√¥ng tin
* Khai b√°o bi·∫øn b·∫±ng t·ª´ kh√≥a var (variable - bi·∫øn)
- C√∫ ph√°p: var tenBien = giaTri;
- Trong ƒë√≥:
    + tenBien: l√† t√™n c·ªßa bi·∫øn c√°c b·∫°n mu·ªën ƒë·∫∑t
    + giaTri: l√† gi√° tr·ªã c·ªßa bi·∫øn, c√≥ th·ªÉ l√† s·ªë, chu·ªói, m·∫£ng, object
* L∆∞u √Ω: t√™n bi·∫øn c√≥ ph√¢n bi·ªát ch·ªØ hoa, ch·ªØ th∆∞·ªùng
* Quy t·∫Øc ƒë·∫∑t t√™n bi·∫øn
‚Ä¢B·∫Øt ƒë·∫ßu ph·∫£i l√† ch·ªØ c√°i ho·∫∑c k√Ω t·ª± ‚Äò_‚Äô
‚Ä¢Kh√¥ng ƒë∆∞·ª£c b·∫Øt ƒë·∫ßy b·∫±ng s·ªë (0->9)
‚Ä¢Kh√¥ng ƒë∆∞·ª£c b·∫Øt ƒë·∫ßu b·∫±ng k√Ω t·ª± ƒë·∫∑c bi·ªát (v√≠ d·ª• #, %, ^, -)
- ƒê·∫∑t t√™n ƒë√∫ng
+ var TenBien = 10; // PascalCase
+ var ten_bien = 10; // snake_case
+ var tenBien = 10; // camelCase
...
üõéÔ∏èOperators (To√°n t·ª≠)
<1> Arithmetic (To√°n t·ª≠ s·ªë h·ªçc)
- L√† to√°n t·ª≠ d√πng ƒë·ªÉ th·ª±c hi·ªán c√°c ph√©p to√°n s·ªë h·ªçc
- Danh s√°ch c√°c to√°n t·ª≠ s·ªë h·ªçc: +, -, *, /, %, ** (ph√©p lu·ªπ th·ª´a), ++, - -
* To√°n t·ª≠ ++
    - Ph√©p tƒÉng gi√° tr·ªã hi·ªán t·∫°i l√™n 1 ƒë∆°n v·ªã 
    - Hai c√°ch s·ª≠ d·ª•ng 
        + ƒê·∫∑t tr∆∞·ªõc bi·∫øn (prefix - ti·ªÅn t·ªë): n√≥ s·∫Ω tƒÉng tr∆∞·ªõc khi l·∫•y gi√° tr·ªã 
        + ƒê·∫∑t sau bi·∫øn (postfix - h·∫≠u t·ªë): n√≥ s·∫Ω l·∫•y gi√° tr·ªã r·ªìi m·ªõi tƒÉng l√™n 
* To√°n t·ª≠ ++
    - Ph√©p gi·∫£m gi√° tr·ªã hi·ªán t·∫°i xu·ªëng 1 ƒë∆°n v·ªã 
    - Hai c√°ch s·ª≠ d·ª•ng 
        + ƒê·∫∑t tr∆∞·ªõc bi·∫øn (prefix - ti·ªÅn t·ªë): n√≥ s·∫Ω gi·∫£m tr∆∞·ªõc khi l·∫•y gi√° tr·ªã 
        + ƒê·∫∑t sau bi·∫øn (postfix - h·∫≠u t·ªë): n√≥ s·∫Ω l·∫•y gi√° tr·ªã r·ªìi m·ªõi gi·∫£m l√™n 
<2> Assignment (To√°n t·ª≠ g√°n)
- D√πng ƒë·ªÉ g√°n gi√° tr·ªã cho m·ªôt bi·∫øn
- Danh s√°ch c√°c to√°n t·ª≠ g√°n: =, +=, -=, *=,  /=, %=
<3> Comparison (To√°n t·ª≠ so s√°nh)
- L√† to√°n t·ª≠ hai ng√¥i d√πng ƒë·ªÉ so s√°nh gi√° tr·ªã c·ªßa hai to√°n h·∫°ng v·ªõi nhau
- Danh s√°ch c√°c to√°n t·ª≠ so s√°nh: >, <, >=, <=, == (kh√¥ng nghi√™m ng·∫∑t), === (nghi√™m ng·∫∑t), != (kh√¥ng nghi√™m ng·∫∑t), !== (nghi√™m ng·∫∑t)
<4> Logical (To√°n t·ª≠ logic)
- L√† to√°n t·ª≠ k·∫øt n·ªëi hai hay nhi·ªÅu bi·ªÉu th·ª©c, d√πng ƒë·ªÉ ki·ªÉm tra m·ªëi quan h·ªá logic gi·ªØa c√°c bi·ªÉu th·ª©c. K·∫øt qu·∫£ cu·ªëi c√πng ph·ª• thu·ªôc v√†o gi√° tr·ªã c·ªßa t·ª´ng bi·ªÉu th·ª©c v√† lo·∫°i to√°n t·ª≠ logic
- Danh s√°ch c√°c to√°n t·ª≠ logic: && (AND),  || (OR),  ! (NOT)
üõéÔ∏èData Types (Ki·ªÉu d·ªØ li·ªáu)
<1> Nguy√™n thu·ª∑ (Primitive Data)
- L√† ki·ªÉu d·ªØ li·ªáu m√† gi√° tr·ªã kh√¥ng thay ƒë·ªïi ƒë∆∞·ª£c
- C√≥ 6 ki·ªÉu: Number, String, Boolean, Undefined, Null, Symbol
* Ki·ªÉu Number
- L√† ki·ªÉu d·ªØ li·ªáu d·∫°ng s·ªë
- Hai lo·∫°i s·ªë: s·ªë nguy√™n v√† s·ªë th·ª±c
- 3 s·ªë ƒë·∫∑c bi·ªát l√†:
‚Ä¢ Infinity: l√† s·ªë d∆∞∆°ng v√¥ c√πng
‚Ä¢ -Infinity: l√† s·ªë √¢m v√¥ c√πng
‚Ä¢ NaN: vi·∫øt t·∫Øt c·ªßa Not a Number, nh·ªØng tr∆∞·ªùng h·ª£p t√≠nh to√°n sai ho·∫∑c k·∫øt qu·∫£ c·ªßa m·ªôt ph√©p t√≠nh kh√¥ng x√°c ƒë·ªãnh
* Ki·ªÉu String
- L√† ki·ªÉu d·ªØ li·ªáu d√πng ƒë·ªÉ bi·ªÉu di·ªÖn ch·ªØ, vƒÉn b·∫£n, ƒëo·∫°n vƒÉn b·∫£n,‚Ä¶
- 3 c√°ch:
‚Ä¢ D√πng d·∫•u nh√°y ƒë∆°n: ‚Äò
‚Ä¢ D√πng d·∫•u nh√°y k√©p: ‚Äú
‚Ä¢ D√πng d·∫•u backtick: (d·∫•u huy·ªÅn)
* Ki·ªÉu Boolean
- L√† ki·ªÉu d·ªØ li·ªáu logic ch·ªâ bao g·ªìm 2 gi√° tr·ªã true v√† false
* Ki·ªÉu Undefined
- L√† ki·ªÉu d·ªØ li·ªáu m√† khi khai b√°o ra m·ªôt bi·∫øn v√† kh√¥ng g√°n gi√° tr·ªã th√¨ k·∫øt qu·∫£ tr·∫£ v·ªÅ l√† undefined
* Ki·ªÉu null
- L√† ki·ªÉu d·ªØ li·ªáu ƒë·∫∑c bi·ªát, ch·ªâ bao g·ªìm m·ªôt gi√° tr·ªã l√† null (kh√¥ng bi·∫øt gi√° tr·ªã, kh√¥ng c√≥ gi√° tr·ªã)
* S·ª± kh√°c nhau c∆° b·∫£n gi·ªØa undefined v√† null
- Ki·ªÉu d·ªØ li·ªáu null l√† ki·ªÉu d·ªØ li·ªáu ƒë∆∞·ª£c g√°n cho bi·∫øn, th∆∞·ªùng ƒë∆∞·ª£c hi·ªÉu l√† kh√¥ng bi·∫øt (kh√¥ng c√≥)
- Ki·ªÉu d·ªØ li·ªáu undefined l√† gi√° tr·ªã m·∫∑c ƒë·ªãnh c·ªßa bi·∫øn sau khi khai b√°o m√† kh√¥ng g√°n gi√° tr·ªã cho bi·∫øn 
* Ki·ªÉu Symbol
- L√† ki·ªÉu d·ªØ li·ªáu nguy√™n thu·ª∑ d√πng ƒë·ªÉ t·∫°o ra c√°c gi√° tr·ªã duy nh·∫•t (unique value) v√† b·∫•t bi·∫øn (immutable)
- Symbol th∆∞·ªùng ƒë∆∞·ª£c d√πng l√†m key cho ki·ªÉu d·ªØ li·ªáu object
<2> D·ªØ li·ªáu ph·ª©c t·∫°p (Complex Data)
- C√≥ 2 ki·ªÉu: Function, Object
* Ki·ªÉu Function
- L√† m·ªôt ch∆∞∆°ng tr√¨nh con gi√∫p th·ª±c thi m·ªôt c√¥ng vi·ªác c·ª• th·ªÉ 
- C√∫ ph√°p: 
function temHam(thamSo1, thamSo2,‚Ä¶) {}
* Ki·ªÉu Object 
- Object l√† ki·ªÉu d·ªØ li·ªáu tham chi·∫øu. C√≥ th·ªÉ hi·ªÉu object l√† m·ªôt t·∫≠p h·ª£p g·ªìm c√°c c·∫∑p key-value (kh√≥a-gi√° tr·ªã)
- Ki·ªÉu d·ªØ li·ªáu c·ªßa key c√≥ th·ªÉ l√† string ho·∫∑c symbol 
- Value ·ª©ng v·ªõi key c√≥ th·ªÉ l√† b·∫•t k·ª≥ ki·ªÉu d·ªØ li·ªáu n√†o
- C√≥ 2 lo·∫°i: Object v√† Array
- C√∫ ph√°p:
+ Object                             
var tenBien = {                    
    key1: ‚Äúvalue 1‚Äù,                  
    key2: ‚Äúvalue 2‚Äù,                 
    ‚Ä¶                                        
}               
+ Array                
var tenBien = [    
     ‚Äúvalue 1‚Äù,
     ‚Äúvalue 2‚Äù,
     ‚Ä¶  
]
üõéÔ∏èM·ªôt s·ªë h√†m built-in
- L√† nh·ªØng h√†m ƒë∆∞·ª£c js ƒë·ªãnh nghƒ©a s·∫µn, ch√∫ng ta ch·ªâ vi·ªác s·ª≠ d·ª•ng
* H√†m alert()
- C√≥ nhi·ªám v·ª• in ra m·ªôt th√¥ng b√°o popup
- N√≥ c√≥ m·ªôt tham s·ªë truy·ªÅn v√†o v√† tham s·ªë n√†y ch√≠nh l√† n·ªôi d·ª•ng th√¥ng b√°o
- C√∫ ph√°p: alert(message);
* H√†m confirm()
- Hi·ªÉn th·ªã th√¥ng b√°o popup v√† c√≥ th√™m hai l·ª±a ch·ªçn Yes v√† No
- N·∫øu ch·ªçn Yes th√¨ tr·∫£ v·ªÅ True v√† ng∆∞·ª£c l·∫°i
- N√≥ c√≥ m·ªôt tham s·ªë truy·ªÅn v√†o v√† tham s·ªë n√†y ch√≠nh l√† n·ªôi d·ª•ng th√¥ng b√°o
- C√∫ ph√°p: confirm(message);
* H√†m prompt()
- D√πng ƒë·ªÉ l·∫•y th√¥ng tin ng∆∞·ªùi d√πng
- G·ªìm hai tham s·ªë truy·ªÅn v√†o l√† n·ªôi dung th√¥ng b√°o v√† gi√° tr·ªã ban ƒë·∫ßu
- C√∫ ph√°p: prompt(title, defaultValue);
title: n·ªôi dung ch·ªØ hi·ªÉn th·ªã
defaultValue: gi√° tr·ªã m·∫∑c ƒë·ªãnh cho √¥ nh·∫≠p (kh√¥ng b·∫Øt bu·ªôc)
* H√†m console
- D√πng ƒë·ªÉ in ra n·ªôi dung ·ªü tab console tr√™n dev tools
- C√≥ 3 h√†m hay s·ª≠ d·ª•ng l√†:
+ console.log(): in ra th√¥ng b√°o
+ console.warn(): in ra c·∫£nh b√°o
+ console.error(): in ra l·ªói
* H√†m setTimeout()
- Code s·∫Ω ch·∫°y 1 l·∫ßn duy nh·∫•t sau m·ªôt kho·∫£ng th·ªùi gian
- C√∫ ph√°p:
setTimeout (function () {
     //code
}, time);
* H√†m setInterval()
- Code s·∫Ω ch·∫°y l·∫∑p l·∫°i sau m·ªôt kho·∫£ng th·ªùi gian
- C√∫ ph√°p: 
setInterval (function () {
     //code
}, time);
üõéÔ∏èTypeof
- Cho ph√©p tr·∫£ v·ªÅ ki·ªÉu c·ªßa m·ªôt bi·∫øn
- N√≥ h·ªØu √≠ch khi ch√∫ng ta mu·ªën x·ª≠ l√Ω c√°c gi√° tr·ªã c·ªßa c√°c ki·ªÉu kh√°c nhau ho·∫∑c ch·ªâ mu·ªën ki·ªÉm tra nhanh
- C√∫ ph√°p: typeof x (x l√† m·ªôt bi·∫øn ho·∫∑c m·ªôt bi·ªÉu th·ª©c)
üõéÔ∏èL√†m vi·ªác v·ªõi String
<1> Length
- Tr·∫£ v·ªÅ ƒë·ªô d√†i c·ªßa chu·ªói
<2> indexOf()
- T√¨m v·ªã tr√≠ ƒë·∫ßu ti√™n c·ªßa m·ªôt chu·ªói n·∫±m trong m·ªôt chu·ªói
- N·∫øu kh√¥ng t√¨m th·∫•y s·∫Ω tr·∫£ v·ªÅ -1
- C√≥ ph√¢n bi·ªát ch·ªØ hoa, ch·ªØ th∆∞·ªùng
- C√∫ ph√°p: string.indexOf(searchvalue, start)
searchvalue: Gi√° tr·ªã c·∫ßn t√¨m ki·∫øm (b·∫Øt bu·ªôc)
start: V·ªã tr√≠ b·∫Øt ƒë·∫ßu t√¨m ki·∫øm (t√≠nh t·ª´ tr√°i qua ph·∫£i) v√† s·∫Ω t√¨m ki·∫øm xu√¥i ti·∫øp (m·∫∑c ƒë·ªãnh b·∫Øt ƒë·∫ßu t·ª´ 0)
<3> lastIndexOf()
- T√¨m v·ªã tr√≠ cu·ªëi c√πng c·ªßa m·ªôt chu·ªói n·∫±m trong m·ªôt chu·ªói
- N·∫øu kh√¥ng t√¨m th·∫•y s·∫Ω tr·∫£ v·ªÅ -1
- C√≥ ph√¢n bi·ªát ch·ªØ hoa, ch·ªØ th∆∞·ªùng
- C√∫ ph√°p: string.lastIndexOf(searchvalue, start)
searchvalue: Gi√° tr·ªã c·∫ßn t√¨m ki·∫øm (b·∫Øt bu·ªôc)
start: V·ªã tr√≠ b·∫Øt ƒë·∫ßu t√¨m ki·∫øm (t√≠nh t·ª´ tr√°i qua ph·∫£i) v√† s·∫Ω t√¨m ki·∫øm ng∆∞·ª£c l·∫°i (m·∫∑c ƒë·ªãnh b·∫Øt ƒë·∫ßu t·ª´ 0)
<4> slice()
- D√πng ƒë·ªÉ c·∫Øt m·ªôt chu·ªói v√† tr·∫£ v·ªÅ m·ªôt chu·ªói m·ªõi
- Chu·ªói ban ƒë·∫ßu kh√¥ng thay ƒë·ªïi
- C√∫ ph√°p: string.slice(start, end)
start: V·ªã tr√≠ b·∫Øt ƒë·∫ßu c·∫Øt (b·∫Øt bu·ªôc)
end: V·ªã tr√≠ k·∫øt th√∫c c·∫Øt (kh√¥ng b·∫Øt bu·ªôc)
<5> replace()
- D√πng ƒë·ªÉ thay th·∫ø 1 chu·ªói th√†nh 1 chu·ªói m·ªõi
- Nh∆∞ng ch·ªâ thay th·∫ø chu·ªói ban ƒë·∫ßu m√† n√≥ t√¨m th·∫•y
- Mu·ªën thay th·∫ø ƒë∆∞·ª£c t·∫•t c·∫£ c√°c t·ª´ t√¨m th·∫•y th√¨ ph·∫£i d√πng Regular Expression (Bi·ªÉu th·ª©c ch√≠nh quy)
- C√∫ ph√°p: string.replace(searchValue, newValue)
searchValue: T·ª´ kho√° c·∫ßn thay th·∫ø (b·∫Øt bu·ªôc)
newValue: T·ª´ kho√° m·ªõi ƒë·ªÉ thay th·∫ø (b·∫Øt bu·ªôc)
<6> toUpperCase() v√† toLowerCase()
- toUpperCase() d√πng ƒë·ªÉ vi·∫øt hoa t·∫•t c·∫£ c√°c ch·ªØ c√°i
- toLowerCase() d√πng ƒë·ªÉ vi·∫øt th∆∞·ªùng t·∫•t c·∫£ c√°c ch·ªØ c√°i
<7> trim()
- D√πng ƒë·ªÉ b·ªè ƒëi kho·∫£ng tr·∫Øng ·ªü 2 ƒë·∫ßu
- C√°c kho·∫£ng tr·∫Øng gi·ªØa c√°c k√Ω t·ª± kh√¥ng b·ªã lo·∫°i b·ªè
- C√∫ ph√°p: string.trim()
<8> chartAt()
- D√πng ƒë·ªÉ l·∫•y k√Ω t·ª± th√¥ng qua index
- C√∫ ph√°p: string.chartAt(index)
index: V·ªã tr√≠ c·ªßa k√Ω t·ª± c·∫ßn l·∫•y
<9> split()
- Chuy·ªÉn m·ªôt chu·ªói th√†nh m·ªôt array
- Nh∆∞ng c·∫ßn t√¨m ra ƒëi·ªÉm chung c·ªßa chu·ªói ƒë√≥
üõéÔ∏èL√†m vi·ªác v·ªõi Number
<1> isNaN()
- D√πng ƒë·ªÉ ki·ªÉm tra m·ªôt bi·∫øn c√≥ ph·∫£i NaN kh√¥ng
- C√∫ ph√°p: isNaN(tenBien)
<2> toString()
- Chuy·ªÉn ki·ªÉu s·ªë th√†nh ki·ªÉu string
- C√∫ ph√°p: tenBien.toString()
<3> toFixed()
- D√πng ƒë·ªÉ l√†m tr√≤n s·ªë th·∫≠p ph√¢n
- N·∫øu s·ªë ngay sau s·ªë c·∫ßn l√†m tr√≤n >=5 th√¨ s·∫Ω l√†m tr√≤n l√™n, <5 s·∫Ω l√†m tr√≤n xu·ªëng
- C√∫ ph√°p: toFixed(digits)
digits: s·ªë ch·ªØ s·ªë sau d·∫•u th·∫≠p ph√¢n (0 <= digits <= 100). Kh√¥ng ƒëi·ªÅn m·∫∑c ƒë·ªãnh l√† 0
üõéÔ∏èL√†m vi·ªác v·ªõi Array
<1> toString()
- Chuy·ªÉn array th√†nh string
- T·ª± ƒë·ªông th√™m d·∫•u ph·∫©y ngƒÉn c√°ch
- C√∫ ph√°p: array.toString()
<2> join()
- Chuy·ªÉn array th√†nh string
- Th√™m d·∫•u b·∫•t k·ª≥ ƒë·ªÉ ngƒÉn c√°ch gi·ªØa c√°c ph·∫ßn t·ª≠
- C√∫ ph√°p: array.join(separator)
separator (d·∫£i ph√¢n c√°ch) l√† d·∫•u ngƒÉn c√°ch ƒë·ªÉ th√™m v√†o string. M·∫∑c ƒë·ªãnh d·∫•u ‚Äú,‚Äù
<3> pop()
- D√πng ƒë·ªÉ xo√° ph·∫ßn t·ª≠ cu·ªëi m·∫£ng
- Tr·∫£ v·ªÅ ph·∫ßn t·ª≠ cu·ªëi m·∫£ng
- C√∫ ph√°p: array.pop()
<4> push()
- Th√™m m·ªôt ho·∫∑c nhi·ªÅu ph·∫ßn t·ª≠ v√†o cu·ªëi m·∫£ng
- Tr·∫£ v·ªÅ ƒë·ªô d√†i m·ªõi c·ªßa m·∫£ng
- C√∫ ph√°p: array.push(item1, item2, ‚Ä¶, itemX)
<5> shift()
- D√πng ƒë·ªÉ xo√° ph·∫ßn t·ª≠ ƒë·∫ßu m·∫£ng
- Tr·∫£ v·ªÅ ph·∫ßn t·ª≠ ·ªü ƒë·∫ßu m·∫£ng
- C√∫ ph√°p: array.shift()
<6> unshift()
- Th√™m m·ªôt ho·∫∑c nhi·ªÅu ph·∫ßn t·ª≠ v√†o ƒë·∫ßu m·∫£ng
- Tr·∫£ v·ªÅ ƒë·ªô d√†i m·ªõi c·ªßa m·∫£ng
- C√∫ ph√°p: array.unshift(item1, item2, ‚Ä¶, itemX)
<7> splice()
- Xo√° ho·∫∑c ch√®n ph·∫ßn t·ª≠ m·ªõi v√†o m·∫£ng
- Tr·∫£ v·ªÅ m·∫£ng b·ªã xo√°
- C√∫ ph√°p: array.splice(index,howmany,item1,..,itemX)
index: V·ªã tr√≠ th√™m/xo√° ph·∫ßn t·ª≠ (b·∫Øt bu·ªôc)
howmany: S·ªë ph·∫ßn t·ª≠ c·∫ßn xo√° (kh√¥ng b·∫Øt bu·ªôc)
item1,‚Ä¶,itemX: C√°c ph·∫ßn t·ª≠ m·ªõi ƒë∆∞·ª£c th√™m v√†o (kh√¥ng b·∫Øt bu·ªôc)
<8> concat()
- D√πng ƒë·ªÉ n·ªëi 2 array
- Kh√¥ng l√†m ·∫£nh h∆∞·ªüng ƒë·∫øn m·∫£ng ban ƒë·∫ßu
- C√∫ ph√°p: array1.concat(array2, array3,‚Ä¶,arrayX)
<9> slice()
- D√πng ƒë·ªÉ c·∫Øt c√°c ph·∫ßn t·ª≠
- Kh√¥ng l√†m ·∫£nh h∆∞·ªüng ƒë·∫øn m·∫£ng ban ƒë·∫ßu
- C√∫ ph√°p: array.slice(start, end)
start: V·ªã tr√≠ b·∫Øt ƒë·∫ßu. M·∫∑c ƒë·ªãnh l√† 0 (kh√¥ng b·∫Øt bu·ªôc)
end: V·ªã tr√≠ k·∫øt th√∫c. M·∫∑c ƒë·ªãnh l√† ph·∫ßn t·ª≠ cu·ªëi c√πng (kh√¥ng b·∫Øt bu·ªôc)