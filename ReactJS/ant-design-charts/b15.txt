28tech‚ÄîH·ªçc Ant Design Charts
üõéÔ∏èGi·ªõi thi·ªáu v√† c√†i ƒë·∫∑t
- Ant Design Charts l√† m·ªôt th∆∞ vi·ªán d√πng ƒë·ªÉ hi·ªÉn th·ªã c√°c bi·ªÉu ƒë·ªì tr√™n web v·ªõi UI ƒë∆∞·ª£c thi·∫øt k·∫ø theo phong c√°ch Ant Design
- ∆Øu ƒëi·ªÉm:
+ S·ª≠ d·ª•ng d·ªÖ d√†ng
+ Bi·ªÉu ƒë·ªì ƒëa d·∫°ng
+ Bi·ªÉu ƒë·ªì ƒë·∫πp
üõéÔ∏èH∆∞·ªõng d·∫´n v·∫Ω Chart 
* Basic Line
- C√°ch s·ª≠ d·ª•ng:
+ B∆∞·ªõc 1: import { Line } from "@ant-design/plots";
+ B∆∞·ªõc 2: Nh√∫ng chart: <Line {...config} />
+ B∆∞·ªõc 3: Th√™m object config
const config = {
    data: dataChart,
    xField: "field hi·ªÉn th·ªã theo tr·ª•c x",
    yField: "field hi·ªÉn th·ªã theo tr·ª•c y",
}
- M·ªôt s·ªë options:
Thu·ªôc t√≠nh      M√¥ t·∫£                                                               Ki·ªÉu        M·∫∑c ƒë·ªãnh
data            M·ªôt m·∫£ng d·ªØ li·ªáu truy·ªÅn v√†o                                         array
                V√≠ d·ª•: dataChart
xField          T√™n tr∆∞·ªùng d·ªØ li·ªáu ·ª©ng v·ªõi ƒë·ªì th·ªã theo tr·ª•c x                       string
                V√≠ d·ª•: xField: 'date'
yField          T√™n tr∆∞·ªùng d·ªØ li·ªáu ·ª©ng v·ªõi ƒë·ªì th·ªã theo tr·ª•c x                       string
                V√≠ d·ª•: yField: 'quantity'
width           ƒê·∫∑t chi·ªÅu r·ªông c·ªßa bi·ªÉu ƒë·ªì                                          number      400
                V√≠ d·ª•: width: 800
height          ƒê·∫∑t chi·ªÅu cao c·ªßa bi·ªÉu ƒë·ªì                                           number      400
                V√≠ d·ª•: height: 800
autoFit         Bi·ªÉu ƒë·ªì c√≥ t·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh ƒë·ªÉ v·ª´a v·ªõi v√πng ch·ª©a hay kh√¥ng?       boolean     true 
                N·∫øu true, c·∫•u h√¨nh chi·ªÅu r·ªông v√† chi·ªÅu cao s·∫Ω kh√¥ng c√≥ t√°c d·ª•ng
                V√≠ d·ª•: autoFit: false
smooth          Chuy·ªÉn ƒë∆∞·ªùng k·∫ª th√†nh d·∫°ng ƒë∆∞·ªùng cong m∆∞·ª£t h∆°n                      boolean     false
                V√≠ d·ª•: smooth: true 
point           Th√™m c√°c ch·∫•m tr√≤n v√†o t·ª´ng m·ªëc                                     boolean     false
                V√≠ d·ª•: point: true 
slider          Th√™m thanh tr∆∞·ª£t ƒë·ªÉ hi·ªÉn th·ªã bi·ªÉu ƒë·ªì n·∫±m trong kho·∫£ng n√†o           
                start: gi√° tr·ªã b·∫Øt ƒë·∫ßu (t·ª´ 0 ƒë·∫øn 1) 
                end: gi√° tr·ªã k·∫øt th√∫c (t·ª´ 0 ƒë·∫øn 1)
                V√≠ d·ª•: slider: {
                    start: 0,
                    end: 1
                } 
color           Thu·ªôc t√≠nh ƒë·∫∑t m√†u s·∫Øc cho ƒë∆∞·ªùng k·∫ª                                 string
meta            T√πy ch·ªânh m·ªü r·ªông                                                   object
                alias: Thay ƒë·ªïi t√™n label
                V√≠ d·ª•: meta: {
                    quantity: {
                        alias: "S·ªë l∆∞·ª£ng",
                    },
                }
label           Hi·ªÉn th·ªã th√™m gi√° tr·ªã v√†o c√°c c·ªôt m·ªëc v√† style c√°c gi√° tr·ªã ƒë√≥       object
                V√≠ d·ª•: label: {
                    style: {
                        fill: "red",
                        opacity: 0.5,
                        fontSize: 12,
                        fontWeight: 700
                    }
                }
* Multi Line
- C√°c s·ª≠ d·ª•ng: Gi·ªëng Basic Line
- M·ªôt s·ªë options: (Gi·ªëng Basic Line)
Thu·ªôc t√≠nh      M√¥ t·∫£                                                               Ki·ªÉu        M·∫∑c ƒë·ªãnh
seriesField     Nh√≥m c√°c tr∆∞·ªùng l·∫°i ƒë·ªÉ xem ƒë·ªìng th·ªùi nhi·ªÅu tr∆∞·ªùng h·ª£p kh√°c nhau     string
                V√≠ d·ª•: seriesField: 'category'
color           Thu·ªôc t√≠nh ƒë·∫∑t m√†u s·∫Øc cho c√°c ƒë∆∞·ªùng k·∫ª                             array
                V√≠ d·ª•: ["#1979C9", "#D62A0D",...]
* Step Line
- C√°c s·ª≠ d·ª•ng: Gi·ªëng Basic Line
- M·ªôt s·ªë options: (Gi·ªëng Basic Line)
Thu·ªôc t√≠nh      M√¥ t·∫£                                                                                                                   Ki·ªÉu                        M·∫∑c ƒë·ªãnh
stepType        Bi·ªÉu ƒë·ªì hi·ªÉn th·ªã ki·ªÉu b∆∞·ªõc nh·∫£y                                                                                         hv | vh | hvh | vhv 
                v: vertical (th·∫≥ng ƒë·ª©ng)
                h: horizontal (n·∫±m ngang)
                V√≠ d·ª•: vh nghƒ©a l√† ƒë∆∞·ªùng k·∫ª ƒë·∫ßu ti√™n theo h∆∞·ªõng th·∫≥ng ƒë·ª©ng (vertical) ƒë∆∞·ªùng k·∫ª ti·∫øp theo n·∫±m ngang (horizontal)
* Basic Area
- C√°ch s·ª≠ d·ª•ng:
+ B∆∞·ªõc 1: import { Area } from "@ant-design/plots";
+ B∆∞·ªõc 2: Nh√∫ng chart: <Area {...config} />
+ B∆∞·ªõc 3: Th√™m object config
const config = {
    data: dataChart,
    xField: "field hi·ªÉn th·ªã theo tr·ª•c x",
    yField: "field hi·ªÉn th·ªã theo tr·ª•c y",
}
- M·ªôt s·ªë options (Gi·ªëng Basic Line)
Thu·ªôc t√≠nh      M√¥ t·∫£                               Ki·ªÉu                M·∫∑c ƒë·ªãnh
areaStyle       Th√™m style cho bi·ªÉu ƒë·ªì Area         object
                fill: ƒë·ªï m√†u cho background
                fillOpacity: ƒë·ªô m·ªù c·ªßa background
                V√≠ d·ª•: areaStyle: {
                    fill: 'l(270) 0:#fff 0.5:#7ec2f3 1:#1890ff',
                    fillOpacity: 0.2
                }                                                                                             
* Stacked Area
- M·ªôt s·ªë options:
Thu·ªôc t√≠nh      M√¥ t·∫£                                                               Ki·ªÉu        M·∫∑c ƒë·ªãnh
seriesField     Nh√≥m c√°c tr∆∞·ªùng l·∫°i ƒë·ªÉ xem ƒë·ªìng th·ªùi nhi·ªÅu tr∆∞·ªùng h·ª£p kh√°c nhau     string
                V√≠ d·ª•: seriesField: 'category'
color           Thu·ªôc t√≠nh ƒë·∫∑t m√†u s·∫Øc cho c√°c ƒë∆∞·ªùng k·∫ª                             array
                V√≠ d·ª•: ["#1979C9", "#D62A0D",...]
* Percented Area
- M·ªôt s·ªë options: (Gi·ªëng Multi Line)
Thu·ªôc t√≠nh      M√¥ t·∫£                                                   Ki·ªÉu        M·∫∑c ƒë·ªãnh
isPercent       Hi·ªÉn th·ªã theo d·∫°ng ph·∫ßn trƒÉm x·∫øp ch·ªìng hay kh√¥ng?       boolean             
* Basic Column
- C√°ch s·ª≠ d·ª•ng:
+ B∆∞·ªõc 1: import { Column } from "@ant-design/plots";
+ B∆∞·ªõc 2: Nh√∫ng chart: <Column {...config} />
+ B∆∞·ªõc 3: Th√™m object config
const config = {
    data: dataChart,
    xField: "field hi·ªÉn th·ªã theo tr·ª•c x",
    yField: "field hi·ªÉn th·ªã theo tr·ª•c y",
}
- M·ªôt s·ªë options (Gi·ªëng Basic Line)
Thu·ªôc t√≠nh              M√¥ t·∫£                               Ki·ªÉu            M·∫∑c ƒë·ªãnh
columnWidthRatio        T·ª∑ l·ªá chi·ªÅu r·ªông c·ªßa c·ªôt [0-1]      number
                        V√≠ d·ª•: columnWidthRatio: 0.2
* Stacked Column
- M·ªôt s·ªë options
Thu·ªôc t√≠nh      M√¥ t·∫£                                   Ki·ªÉu            M·∫∑c ƒë·ªãnh
isStack         C√≥ x·∫øp ch·ªìng l√™n nhau hay kh√¥ng?        boolean         false
                V√≠ d·ª•: isStack: true 
connectedArea   V·∫Ω v√πng li√™n k·∫øt c·ªßa c√πng m·ªôt tr∆∞·ªùng    boolean                             
* Grouped Column
- M·ªôt s·ªë options
Thu·ªôc t√≠nh          M√¥ t·∫£                                           Ki·ªÉu            M·∫∑c ƒë·ªãnh
isGroup             C√≥ chuy·ªÉn th√†nh d·∫°ng group hay kh√¥ng?           boolean         false
                    V√≠ d·ª•: isGroup: true 
dodgePadding        Kho·∫£ng c√°ch gi·ªØa c√°c c·ªôt trong c√πng m·ªôt nh√≥m    number
                    V√≠ d·ª•: dodgePadding: 5
intervalPadding     Kho·∫£ng c√°ch gi·ªØa c√°c nh√≥m                       number
                    V√≠ d·ª•: intervalPadding: 20
* Basic Bar
- C√°ch s·ª≠ d·ª•ng:
+ B∆∞·ªõc 1: import { Bar } from "@ant-design/plots";
+ B∆∞·ªõc 2: Nh√∫ng chart: <Bar {...config} />
+ B∆∞·ªõc 3: Th√™m object config
const config = {
    data: dataChart,
    xField: "field hi·ªÉn th·ªã theo tr·ª•c x",
    yField: "field hi·ªÉn th·ªã theo tr·ª•c y",
}
* Stacked Bar
* Grouped Bar
* Pie
- C√°ch s·ª≠ d·ª•ng:
+ B∆∞·ªõc 1: import { Pie } from "@ant-design/plots";
+ B∆∞·ªõc 2: Nh√∫ng chart: <Pie {...config} />
+ B∆∞·ªõc 3: Th√™m object config
const config = {
    data: dataChart,
    angleField: "",
    colorField: "",
}
- M·ªôt s·ªë options:
Thu·ªôc t√≠nh      M√¥ t·∫£                                                                                   Ki·ªÉu            M·∫∑c ƒë·ªãnh
angleField      T√™n tr∆∞·ªùng d·ªØ li·ªáu c√≥ gi√° tr·ªã t∆∞∆°ng ·ª©ng v·ªõi k√≠ch th∆∞·ªõc c√°c l√°t c·∫Øt cung (radian)        string 
colorField      T√™n tr∆∞·ªùng d·ªØ li·ªáu t∆∞∆°ng ·ª©ng v·ªõi m√†u t·ª´ng lo·∫°i                                          string
* Basic Rose
- C√°ch s·ª≠ d·ª•ng:
+ B∆∞·ªõc 1: import { Rose } from "@ant-design/plots";
+ B∆∞·ªõc 2: Nh√∫ng chart: <Rose {...config} />
+ B∆∞·ªõc 3: Th√™m object config
const config = {
    data: dataChart,
    xField: "field hi·ªÉn th·ªã theo tr·ª•c x",
    yField: "field hi·ªÉn th·ªã theo tr·ª•c y",
}
- M·ªôt s·ªë options:
Thu·ªôc t√≠nh      M√¥ t·∫£                                   Ki·ªÉu            M·∫∑c ƒë·ªãnh
seriesField     C√°c tr∆∞·ªùng d√πng ƒë·ªÉ nh√≥m d·ªØ li·ªáu         string
                V√≠ d·ª•: seriesField: 'type'
* Grouped Rose
- M·ªôt s·ªë options:
Thu·ªôc t√≠nh      M√¥ t·∫£                                   Ki·ªÉu            M·∫∑c ƒë·ªãnh
seriesField     C√°c tr∆∞·ªùng d√πng ƒë·ªÉ nh√≥m d·ªØ li·ªáu         string
                V√≠ d·ª•: seriesField: 'type'
isGroup         C√≥ chuy·ªÉn th√†nh d·∫°ng group hay kh√¥ng?   boolean         false
                V√≠ d·ª•: isGroup: true 
* Tiny Line
- C√°ch s·ª≠ d·ª•ng:
+ B∆∞·ªõc 1: import { TinyLine } from "@ant-design/plots";
+ B∆∞·ªõc 2: Nh√∫ng chart: <TinyLine {...config} />
+ B∆∞·ªõc 3: Th√™m object config
const config = {
    data: dataChart,
    height: 60,
    width: 300,
    autoFit: false
}
* Tiny Area 