28tech‚ÄîH·ªçc Ant Design (Ti·∫øt 2)
üõéÔ∏èComponent: Checkbox
- API: 
+ Checkbox: 
Thu·ªôc t√≠nh              M√¥ t·∫£                                                                                           Ki·ªÉu                M·∫∑c ƒë·ªãnh
autoFocus               T·ª± ƒë·ªông focus v√†o √¥ checkbox khi component load xong. Ch·ªâ √°p d·ª•ng ƒë∆∞·ª£c cho 1 checkbox           boolean             false
checked                 Ch·ªâ ƒë·ªãnh xem checkbox c√≥ ƒë∆∞·ª£c ch·ªçn hay kh√¥ng                                                    boolean             false
defaultChecked          Ch·ªâ ƒë·ªãnh tr·∫°ng th√°i ban ƒë·∫ßu: checkbox c√≥ ƒë∆∞·ª£c ch·ªçn hay kh√¥ng                                    boolean             false
disabled                D√πng ƒë·ªÉ v√¥ hi·ªáu h√≥a checkbox                                                                    boolean             false
onChange                H√†m callback ƒë∆∞·ª£c g·ªçi khi tr·∫°ng th√°i thay ƒë·ªïi                                                  
üõéÔ∏èComponent: DatePicker
- API:
Thu·ªôc t√≠nh              M√¥ t·∫£                                                               Ki·ªÉu                                            M·∫∑c ƒë·ªãnh
allowClear*             C√≥ hi·ªÉn th·ªã n√∫t clear hay kh√¥ng                                     boolean                                         true
autoFocus*              T·ª± ƒë·ªông focus khi component ƒë∆∞·ª£c render                             boolean                                         false
bordered*               C√≥ th√™m border hay kh√¥ng                                            boolean                                         true
disabled*               ƒê·ªÉ v√¥ hi·ªáu h√≥a, kh√¥ng cho ch·ªçn                                      boolean                                         false
format*                 D√πng ƒë·ªÉ ƒë·ªãnh d·∫°ng ng√†y                                              string
                        V√≠ d·ª•: format="DD-MM-YYYY HH:mm:ss"
                        Tham kh·∫£o th√™m: https://day.js.org/docs/en/display/format                                                  
placement*              V·ªã tr√≠ b·∫£ng ch·ªçn ƒë∆∞·ª£c m·ªü l√™n                                        bottomLeft bottomRight topLeft topRight         bottomLeft
size*                   ƒê·∫∑t k√≠ch th∆∞·ªõc c·ªßa √¥ input                                          large | middle | small                          middle
                        large: c√≥ height = 40px
                        middle: c√≥ height = 32px
                        small: c√≥ height = 24px
status*                 ƒê·∫∑t tr·∫°ng th√°i x√°c th·ª±c                                             'error' | 'warning'
suffixicon              Ch·ªânh s·ª≠a icon calendar trong √¥ input                               ReactNode
nextIcon                Ch·ªânh s·ª≠a icon next (c√≥ 1 m≈©i t√™n)                                  ReactNode
previcon                Ch·ªânh s·ª≠a icon prev (c√≥ 1 m≈©i t√™n)                                  ReactNode
superNextIcon           Ch·ªânh s·ª≠a icon next (c√≥ 2 m≈©i t√™n)                                  ReactNode
superPrevIcon           Ch·ªânh s·ª≠a icon prev (c√≥ 2 m≈©i t√™n)                                  ReactNode
onOpenChange            L√† m·ªôt h√†m ƒë∆∞·ª£c g·ªçi khi b·∫£ng ch·ªçn ƒë∆∞·ª£c m·ªü ho·∫∑c ƒë√≥ng                 ReactNode
üõéÔ∏èComponent: Input
- API:
+ Input: 
Thu·ªôc t√≠nh              M√¥ t·∫£                                                           Ki·ªÉu                            M·∫∑c ƒë·ªãnh
addonAfter*             Label ƒë∆∞·ª£c hi·ªÉn th·ªã ph√≠a sau (·ªü b√™n ph·∫£i) c·ªßa √¥ input           ReactNode           
addonBefore*            Label ƒë∆∞·ª£c hi·ªÉn th·ªã ph√≠a tr∆∞·ªõc (·ªü b√™n tr√°i) c·ªßa √¥ input         ReactNode
allowClear*             Th√™m n√∫t clear (icon x) ƒë·ªÉ x√≥a d·ªØ li·ªáu                          boolean                         false
bordered*               C√≥ hi·ªÉn th·ªã border hay kh√¥ng?                                   boolean                         true
defaultValue*           Gi√° tr·ªã kh·ªüi t·∫°o ban ƒë·∫ßu                                        string          
disabled*               V√¥ hi·ªáu h√≥a √¥ input                                             boolean                         false   
id*                     Th√™m id cho √¥ input                                             string
maxLength*              S·ªë k√Ω t·ª± t·ªëi ƒëa                                                 number  
showCount*              Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng k√Ω t·ª± ƒë√£ ƒëi·ªÅn                                 boolean                         false
status*                 ƒê·∫∑t tr·∫°ng th√°i x√°c th·ª±c                                         'error' | 'warning' 
prefix*                 Th√™m bi·ªÉu t∆∞·ª£ng trong √¥ input v√† hi·ªÉn th·ªã ph√≠a tr∆∞·ªõc            ReactNode                       
size*                   ƒê·∫∑t k√≠ch th∆∞·ªõc c·ªßa √¥ input                                      large | middle | small          
                        large: c√≥ height = 40px
                        middle: c√≥ height = 32px
                        small: c√≥ height = 24px
suffix*                 Th√™m bi·ªÉu t∆∞·ª£ng trong √¥ input v√† hi·ªÉn th·ªã ph√≠a tr∆∞·ªõc            ReactNode
type*                   Ki·ªÉu c·ªßa √¥ input                                                string                          text
value*                  Gi√° tr·ªã c·ªßa √¥ input                                             string
onChange*               G·ªçi h√†m khi gi√° tr·ªã trong √¥ input ƒë∆∞·ª£c thay ƒë·ªïi                 function(e)
onPressEnter            G·ªçi h√†m khi ng∆∞·ªùi d√πng g√µ xong v√† nh·∫•n ph√≠m Enter               function(e)
+ Input.TextArea:   
Thu·ªôc t√≠nh              M√¥ t·∫£                                                       Ki·ªÉu                        M·∫∑c ƒë·ªãnh
allowClear*             Th√™m n√∫t clear (icon x) ƒë·ªÉ x√≥a d·ªØ li·ªáu                      boolean                     false
autoSize*               T√≠nh nƒÉng t·ª± ƒë·ªông ƒëi·ªÅn chi·ªÅu cao                            boolean | object            false
                        C√≥ th·ªÉ ƒë·∫∑t ccas gi√° tr·ªã: 
                        boolean: true | false
                        object: {minRows: number, maxRows: number}
bordered*               C√≥ hi·ªÉn th·ªã border hay kh√¥ng?                               boolean                     true 
defaultValue*           Gi√° tr·ªã kh·ªüi t·∫°o ban ƒë·∫ßu                                    string
maxLength*              S·ªë k√Ω t·ª± t·ªëi ƒëa                                             number
showCount*              Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng k√Ω t·ª± ƒë√£ ƒëi·ªÅn                             boolean                     false
onPressEnter            G·ªçi h√†m khi ng∆∞·ªùi d√πng g√µ xong v√† nh·∫•n ph√≠m Enter           function(e)
onResize                G·ªçi h√†m khi ng∆∞·ªùi d√πng thay ƒë·ªïi k√≠ch th∆∞·ªõc √¥ textarea       function(e)
+ Input.Search:
Thu·ªôc t√≠nh              M√¥ t·∫£                                                                           Ki·ªÉu                        M·∫∑c ƒë·ªãnh
enterButton             Th√™m button sau √¥ input v√† t√πy ch·ªânh ƒë∆∞·ª£c button theo √Ω mu·ªën                    boolean | ReactNode         false
loading*                Th√™m loading cho button t√¨m ki·∫øm                                                boolean                     false
onSearch*               G·ªçi h√†m khi ng∆∞·ªùi d√πng click v√†o icon x√≥a, n√∫t t√¨m ki·∫øm, b·∫•m enter              function(value, event)
+ Input.Password:
Thu·ªôc t√≠nh              M√¥ t·∫£                                   Ki·ªÉu                        M·∫∑c ƒë·ªãnh
iconRender              Button c√≥ th·ªÉ toggle ƒë·ªÉ ƒë·ªïi icon        (visible) => ReactNode      (visible) => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)
üõéÔ∏èComponent: Radio
- API:
+ Radio:
Thu·ªôc t√≠nh              M√¥ t·∫£                                                               Ki·ªÉu            M·∫∑c ƒë·ªãnh
autoFocus*              T·ª± ƒë·ªông focus v√†o khi component render xong                         boolean         false
checked*                Ch·ªâ ƒë·ªãnh xem radio c√≥ ƒë∆∞·ª£c ch·ªçn hay kh√¥ng                           boolean         false
defaultChecked*         Ch·ªâ ƒë·ªãnh tr·∫°ng th√°i ban ƒë·∫ßu: radio c√≥ ƒë∆∞·ª£c ch·ªçn hay kh√¥ng           boolean         false
disabled*               V√¥ hi·ªáu h√≥a radio                                                   boolean         false
value*                  Gi√° tr·ªã c·ªßa radio                                                   any             
üõéÔ∏èComponent: Select
- API:
+ Select: 
Thu·ªôc t√≠nh              M√¥ t·∫£                                                                                                                       Ki·ªÉu                                                M·∫∑c ƒë·ªãnh
allowClear*             Hi·ªÉn th·ªã n√∫t clear data                                                                                                     boolean                                             false
autoFocus*              T·ª± ƒë·ªông focus v√†o th·∫ª Select                                                                                                boolean                                             false
bordered*               Th√™m border hay kh√¥ng?                                                                                                      boolean                                             true
clearIcon               T√πy ch·ªânh icon clear                                                                                                        ReactNode         
defaultOpen             Tr·∫°ng th√°i m·ªü ban ƒë·∫ßu dropdown                                                                                              boolean             
defaultValue*           T√πy ch·ªçn ƒë∆∞·ª£c ch·ªçn ban ƒë·∫ßu                                                                                                  string | number | array
disabled*               V√¥ hi·ªáu h√≥a                                                                                                                 boolean                                             false
filterOption            L·ªçc ra nh·ªØng l·ª±a ch·ªçn kh·ªõp v·ªõi t·ª´ m√† ng∆∞·ªùi d√πng nh·∫≠p v√†o √¥ input sau ƒë√≥ hi·ªÉn th·ªã ra ƒë·ªÉ g·ª£i √Ω                                function(inputValue, option)
                        V√≠ d·ª•: filterOption={(input, option) => (option?.label??"").includes(input)}
                        Ghi ch√∫: "A??B" l√† ph√©p to√°n "nullish coalescing". N·∫øu A ƒë∆∞·ª£c x√°c ƒë·ªãnh (kh√°c null ho·∫∑c undefined), A s·∫Ω ƒë∆∞·ª£c tr·∫£ v·ªÅ. 
                        N·∫øu A l√† null ho·∫∑c undefined, th√¨ B s·∫Ω ƒë∆∞·ª£c tr·∫£ v·ªÅ
labelInValue            Gi√° tr·ªã tr·∫£ v·ªÅ l√† 1 object bao g·ªìm value v√† label                                                                           boolean                                             false
listHeight              C·∫•u h√¨nh chi·ªÅu cao dropdown                                                                                                 number                                              256
loading                 Th√™m loading ƒë·∫±ng sau dropdown                                                                                              boolean                                             false
maxTagCount             S·ªë l∆∞·ª£ng tag t·ªëi ƒëa ƒë·ªÉ hi·ªÉn th·ªã.
                        N·∫øu gi√° tr·ªã l√† responsive th√¨ s·∫Ω t·ª± ƒë·ªông ƒë·ªÉ s·ªë l∆∞·ª£ng item v·ª´a v·ªõi chi·ªÅu r·ªông giao di·ªán                                      number | responsive
notFoundContent         Ch·ªâ ƒë·ªãnh n·ªôi dung s·∫Ω hi·ªÉn th·ªã khi kh√¥ng c√≥ k·∫øt qu·∫£ ph√π h·ª£p                                                                  ReactNode                                           Not Found
options*                Danh s√°ch c√°c l·ª±a ch·ªçn                                                                                                      { label, value }[]
placement*              V·ªã tr√≠ b·∫£ng ch·ªçn b·∫≠t l√™n                                                                                                    bottomLeft, bottomRight, topLeft, topRight          bottomLeft 
showArrow*              C√≥ hi·ªÉn th·ªã m≈©i t√™n dropdown hay kh√¥ng?                                                                                     boolean
showSearch*             C√≥ hi·ªÉn th·ªã icon search hay kh√¥ng?                                                                                          boolean                                             
size*                   K√≠ch th∆∞·ªõc c·ªßa dropdown                                                                                                     large | middle | small                              middle
status*                 ƒê·∫∑t tr·∫°ng th√°i x√°c th·ª±c cho dropdown                                                                                        'error' | 'warning'
                        error c√≥ border ƒë·ªè
                        warning c√≥ border v√†ng  
suffixicon              T√πy ch·ªânh bi·ªÉu t∆∞·ª£ng ·ªü h·∫≠u t·ªë (icon down)                                                                                   ReactNode   
value*                  Nh·ªØng gi√° tr·ªã ƒëang ƒë∆∞·ª£c ch·ªçn                                                                                                string | string[] | number | number[]
onChange*               ƒê∆∞·ª£c g·ªçi khi c√≥ thay ƒë·ªïi gi√° tr·ªã                                                                                            function(value, option: Option | Array<Option>)
onClear*                ƒê∆∞·ª£c g·ªçi khi click v√†o n√∫t clear (d·∫•u x: allowClear)                                                                        function
onDeselect*             ƒê∆∞·ª£c g·ªçi khi b·ªè ch·ªçn 1 t√πy ch·ªçn b·∫•t k·ª≥                                                                                      function(value: string | number)
onDeselect*             ƒê∆∞·ª£c g·ªçi khi g√µ ch·ªØ t√¨m ki·∫øm                                                                                                function(value)
onDeselect*             ƒê∆∞·ª£c g·ªçi khi ch·ªçn m·ªôt l·ª±a ch·ªçn                                                                                              function(value: string | number, option: Option)
üõéÔ∏èComponent: Switch
Thu·ªôc t√≠nh              M√¥ t·∫£                                               Ki·ªÉu                                            M·∫∑c ƒë·ªãnh
autoFocus               ƒê∆∞·ª£c focus v√†o khi component load xong              string                                          false
checked                 X√°c ƒë·ªãnh xem Switch c√≥ ƒë∆∞·ª£c b·∫≠t hay kh√¥ng           string                                          false
checkedChildren         N·ªôi dung con ·ªü b√™n trong khi Switch ƒë∆∞·ª£c b·∫≠t        ReactNode
unCheckedChildren       N·ªôi dung con ·ªü b√™n trong khi Switch ƒë∆∞·ª£c t·∫Øt        ReactNode
defaultChecked          Tr·∫°ng th√°i ban ƒë·∫ßu c·ªßa Switch                       boolean                                         false
disabled                C√≥ b·ªã v√¥ hi·ªáu h√≥a hay kh√¥ng?                        boolean                                         false
loading                 C√≥ th√™m hi·ªáu ·ª©ng loading hay kh√¥ng?                 boolean                                         false
size                    K√≠ch th∆∞·ªõc c·ªßa Switch: default v√† small             string                                          default
onChange                ƒê∆∞·ª£c g·ªçi m·ªói khi b·∫≠t/t·∫Øt Switch                     function(checked: boolean, event: Event)
