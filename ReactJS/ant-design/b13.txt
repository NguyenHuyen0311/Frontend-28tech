28tech‚ÄîH·ªçc Ant Design (Ti·∫øt 3)
üõéÔ∏èComponent: Form
- API:
+ Form:
Thu·ªôc t√≠nh          M√¥ t·∫£                                                                           Ki·ªÉu                                                    M·∫∑c ƒë·ªãnh
colon               C√≥ hi·ªÉn th·ªã d·∫•u hai ch·∫•m sau label hay kh√¥ng?                                   boolean                                                 true
disabled*           V√¥ hi·ªáu h√≥a bi·ªÉu m·∫´u                                                            boolean                                                 false
form*               ƒê·ªÉ ki·ªÉm so√°t bi·ªÉu m·∫´u                                                           FormInstance
                    V√≠ d·ª•: const [form] = Form.useForm();
                    <Form form={form}></Form>
initialValues*      ƒê·∫∑t gi√° tr·ªã kh·ªüi t·∫°o cho bi·ªÉu m·∫´u                                               object
labelWrap*          N·∫øu n·ªôi dung c·ªßa label qu√° d√†i th√¨ c√≥ t·ª± ƒë·ªông xu·ªëng d√≤ng hay kh√¥ng?             boolean                                                 false
layout*             B·ªë c·ª•c bi·ªÉu m·∫´u                                                                 horizontal | vertical | inline                          horizontal
name*               T√™n bi·ªÉu m·∫´u                                                                    string
                    L√†m ti·ªÅn t·ªë cho id c·ªßa c√°c tr∆∞·ªùng trong form
scrollToFirstError* T·ª± ƒë·ªông cu·ªôn ƒë·∫øn tr∆∞·ªùng b·ªã l·ªói ƒë·∫ßu ti√™n khi g·ª≠i bi·ªÉu m·∫´u                        boolean | Options                                       false
size*               K√≠ch th∆∞·ªõc c·ªßa c√°c tr∆∞·ªùng trong form                                            small | middle | large      
onFinish*           ƒê∆∞·ª£c g·ªçi sau khi g·ª≠i bi·ªÉu m·∫´u v√† x√°c minh d·ªØ li·ªáu th√†nh c√¥ng                    function(values)
onFinishFalied*     ƒê∆∞·ª£c g·ªçi sau khi g·ª≠i bi·ªÉu m·∫´u v√† x√°c minh d·ªØ li·ªáu kh√¥ng th√†nh c√¥ng              function({values, errorFields, outOfDate})  
+ Form.Item:
Thu·ªôc t√≠nh          M√¥ t·∫£                                                                                       Ki·ªÉu                M·∫∑c ƒë·ªãnh
dependencies        ƒê·∫∑t tr∆∞·ªùng ph·ª• thu·ªôc                                                                        NamePath[]          
                    V√≠ d·ª•: tr∆∞·ªùng Confirm Password ph·ª• thu·ªôc v√†o tr∆∞·ªùng Password
extra*              Th√™m th√¥ng b√°o nh·∫Øc th√™m ·ªü d∆∞·ªõi c√°c tr∆∞·ªùng (ch·ªØ nh·ªè)                                        ReactNode
initialValue        Gi√° tr·ªã kh·ªüi t·∫°o cho m·ªôt tr∆∞·ªùng.                                                            string 
                    N·∫øu bi·ªÉu m·∫´u c≈©ng c√≥ initialValues th√¨ s·∫Ω ∆∞u ti√™n gi√° tr·ªã kh·ªüi t·∫°o c·ªßa bi·ªÉu m·∫´u h∆°n 
name*               T√™n c·ªßa tr∆∞·ªùng                                                                              NamePath
required*           B·∫Øt bu·ªôc ph·∫£i nh·∫≠p gi√° tr·ªã v√†o tr∆∞·ªùng                                                       boolean             false
üõéÔ∏èComponent: Badge
üõéÔ∏èComponent: Carousel
üõéÔ∏èComponent: Collapse
- API:
+ Collapse:
Thu·ªôc t√≠nh          M√¥ t·∫£                                                                   Ki·ªÉu                                        M·∫∑c ƒë·ªãnh
accordion*          N·∫øu ƒë√∫ng, m·ªói l·∫ßn click s·∫Ω m·ªü tab hi·ªán tab m·ªõi v√† ƒë√≥ng tab c≈© ƒëi        boolean                                     false
bordered            C√≥ hi·ªÉn th·ªã border hay kh√¥ng?                                           boolean                                     true 
collapsible*        Ch·ªâ ƒë·ªãnh xem khu v·ª±c c√≥ th·ªÉ click v√†o ƒë√≥ng/m·ªü tab ƒë∆∞·ª£c                  header | icon | disabled        
defaultActiveKey*   Danh s√°ch c√°c tab ƒë∆∞·ª£c m·ªü m·∫∑c ƒë·ªãnh khi component render xong            string[] | string | number[] | number
expandIcon*         Thay ƒë·ªïi icon ƒë√≥ng/m·ªü                                                   (panelProps) => ReactNode
                    V√≠ d·ª•: expandIcon={() => <>test</>}
expandIconPosition* ƒêi·ªÅu ch·ªânh icon ƒë√≥ng/m·ªü n·∫±m ·ªü v·ªã tr√≠ b·∫Øt ƒë·∫ßu ho·∫∑c k·∫øt th√∫c              start | end 
ghost               Border v√† n·ªÅn chuy·ªÉn th√†nh trong su·ªët (transparent)                     boolean                                     false
size*               K√≠ch th∆∞·ªõc c·ªßa c√°c tab                                                  large | middle | small                      middle
+ Collapse.Panel:
Thu·ªôc t√≠nh          M√¥ t·∫£                                                           Ki·ªÉu                                M·∫∑c ƒë·ªãnh
collapsible*        Ch·ªâ ƒë·ªãnh xem khu v·ª±c c√≥ th·ªÉ click v√†o ƒë√≥ng/m·ªü tab ƒë∆∞·ª£c          header | icon | disabled            
header*             Ti√™u ƒë·ªÅ c·ªßa tab                                                 ReactNode
key*                Th√™m key duy nh·∫•t cho m·ªói tab                                   string | number
showArrow           C√≥ hi·ªÉn th·ªã n√∫t ƒë√≥ng/m·ªü hay kh√¥ng?                              boolean                             true
üõéÔ∏èComponent: Image
Thu·ªôc t√≠nh          M√¥ t·∫£                                                               Ki·ªÉu                M·∫∑c ƒë·ªãnh
alt*                M√¥ t·∫£ cho h√¨nh ·∫£nh, s·∫Ω hi·ªÉn th·ªã n·∫øu ·∫£nh l·ªói                         string      
fallback*           L√† m·ªôt ·∫£nh thay th·∫ø n·∫øu ·∫£nh ch√≠nh b·ªã l·ªói                            string
height*             Chi·ªÅu cao c·ªßa ·∫£nh                                                   string | number
placeholder         Load ·∫£nh n√†y tr∆∞·ªõc n·∫øu ·∫£nh ch√≠nh ch∆∞a k·ªãp load xong                 ReactNode
                    (th∆∞·ªùng ·∫£nh n√†y l√† ·∫£nh dung l∆∞·ª£ng nh·ªè ƒë·ªÉ show l√™n gi·ªØ ch·ªó)
preview*            C√≥ cho preview ·∫£nh kh√¥ng?                                           boolean
src*                ƒê∆∞·ªùng d·∫´n ·∫£nh                                                       string
width*              Chi·ªÅu r·ªông c·ªßa ·∫£nh                                                  string | number
onError*            ƒê∆∞·ª£c g·ªçi khi ·∫£nh load kh√¥ng th√†nh c√¥ng                              (event) => void
rootClassName       Th√™m className cho component                                        string
üõéÔ∏èComponent: Table
- API:
+ Table:
Thu·ªôc t√≠nh          M√¥ t·∫£                                   Ki·ªÉu                                        M·∫∑c ƒë·ªãnh
bordered*           Th√™m border cho table                   boolean                                     false
columns*            C√°c c·ªôt c·ªßa table                       ColumnsType[]           
dataSource*         M·ªôt m·∫£ng c√°c b·∫£n ghi                    object[]
expandable          C·∫•u h√¨nh th√™m ph·∫ßn n·ªôi dung m·ªü r·ªông     expandable
footer              Th√™m footer cho table                   function(currentPageData)
loading*            Th√™m tr·∫°ng th√°i loading cho table       boolean                                     false
pagination*         C·∫•u h√¨nh ph√¢n trang                     object | false
                    V√≠ d·ª•: pagination: {
                        current: 1,
                        pageSize: 20
                    }
rowKey*             Th√™m key cho m·ªói h√†ng                   string | function(record): string           key
rowSelection*       Th√™m √¥ t√≠ch ƒë·ªÉ ch·ªçn h√†ng                object
scroll*             C·∫•u h√¨nh h√†ng c√≥ th·ªÉ ƒë∆∞·ª£c cu·ªôn          object
showHeader*         C√≥ hi·ªán header hay kh√¥ng?               boolean                                     true 
size*               K√≠ch th∆∞·ªõc c·ªßa b·∫£ng                     large | middle | small                      large
+ Column:
Thu·ªôc t√≠nh          M√¥ t·∫£                                                                               Ki·ªÉu                                                            M·∫∑c ƒë·ªãnh
align               CƒÉn ch·ªânh n·ªôi dung c·ªßa c·ªôt                                                          left | right | center                                           left
dataIndex           key c·ªßa m·ªôt object trong 1 m·∫£ng                                                     string | string[]
key                 Key duy nh·∫•t c·ªßa m·ªôt c·ªôt                                                            string
render              Ch·ªânh s·ª≠a l·∫°i c√°ch render data ra giao di·ªán, gi√° tr·ªã tr·∫£ v·ªÅ l√† m·ªôt ReactNode        function(text, record, index) {}
title               Ti√™u ƒë·ªÅ c·ªßa c·ªôt                                                                     ReactNode | ({sortOrder, sortColumn, filters}) => ReactNode
width               Chi·ªÅu r·ªông c·ªßa c·ªôt                                                                  string | number
+ rowSelection:
Thu·ªôc t√≠nh          M√¥ t·∫£                                                   Ki·ªÉu                                                            M·∫∑c ƒë·ªãnh
hideSelectAll       C√≥ ·∫©n checkbox all hay kh√¥ng?                           boolean                             
                    V√≠ d·ª•: rowSelection={{hideSelectAll: true}}             
selectedRowKeys*    M·ªôt m·∫£ng c√°c key c·ªßa c√°c h√†ng ƒë√£ ch·ªçn                   string[] | number[]
type*               Ch·ªçn ki·ªÉu l√† checkbox ho·∫∑c radio                        checkbox | radio                                                checkbox
onChange*           ƒê∆∞·ª£c g·ªçi m·ªói khi c√°c l·ª±a ch·ªçn thay ƒë·ªïi                  function(selectedRowKeys, selectedRows, info: {type})
onSelect*           ƒê∆∞·ª£c g·ªçi m·ªói khi ch·ªçn/b·ªè m·ªôt h√†ng                       function(record, selected, selectedRows, nativeEvent)
onSelectAll*        ƒê∆∞·ª£c g·ªçi m·ªói khi ch·ªçn/b·ªè t·∫•t c·∫£ c√°c h√†ng                function(selected, selectedRows, changeRows)
üõéÔ∏èComponent: Tabs
Thu·ªôc t√≠nh          M√¥ t·∫£                                                                       Ki·ªÉu                                    M·∫∑c ƒë·ªãnh
activeKey           Tab hi·ªán t·∫°i ƒëang b·∫≠t (truy·ªÅn v√†o key c·ªßa n√≥)                               string
centered            ƒê·∫∑t tabs ra ch√≠nh gi·ªØa                                                      boolean                                 false
defaultActiveKey    Kh·ªüi t·∫°o tab ban ƒë·∫ßu ƒë∆∞·ª£c hi·ªÉn th·ªã (n·∫øu activeKey kh√¥ng ƒë∆∞·ª£c th√™m v√†o)      string
items               Danh s√°ch c√°c tab                                                           TabItemType                             []                                          
size                K√≠ch th∆∞·ªõc thanh tab ƒë·∫∑t tr∆∞·ªõc                                              large | middle | small                  middle
tabBarGutter        Kho·∫£ng c√°ch gi·ªØa c√°c tab                                                    number
tabBarStyle         Css cho c√°c tab                                                             CSSProperties
tabPosition         V·ªã tr√≠ c·ªßa c√°c tab                                                          top | right | bottom | left             top 
type                Ki·ªÉu c·ªßa tab                                                                line | card | editable-card             line 
onChange            ƒê∆∞·ª£c g·ªçi khi tab thay ƒë·ªïi                                                   function(activeKey) {}